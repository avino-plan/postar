// Copyright 2020 Ye Zi Jie.  All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file.
//
// Author: FishGoddess
// Email: fishgoddess@qq.com

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: postar_service.proto

// The package name is "services".

package services

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Email struct.
type Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// to is the recipient of this email.
	To string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	// subject is the title of this email.
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// contentType is the content type of this email.
	ContentType string `protobuf:"bytes,3,opt,name=contentType,proto3" json:"contentType,omitempty"`
	// body is the body of this email.
	Body string `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *Email) Reset() {
	*x = Email{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postar_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Email) ProtoMessage() {}

func (x *Email) ProtoReflect() protoreflect.Message {
	mi := &file_postar_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Email.ProtoReflect.Descriptor instead.
func (*Email) Descriptor() ([]byte, []int) {
	return file_postar_service_proto_rawDescGZIP(), []int{0}
}

func (x *Email) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Email) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Email) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *Email) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

// SendOptions are some settings of sending task.
type SendOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sync means the send task is synchronous, default is asynchronous.
	Sync bool `protobuf:"varint,1,opt,name=sync,proto3" json:"sync,omitempty"`
}

func (x *SendOptions) Reset() {
	*x = SendOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postar_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOptions) ProtoMessage() {}

func (x *SendOptions) ProtoReflect() protoreflect.Message {
	mi := &file_postar_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOptions.ProtoReflect.Descriptor instead.
func (*SendOptions) Descriptor() ([]byte, []int) {
	return file_postar_service_proto_rawDescGZIP(), []int{1}
}

func (x *SendOptions) GetSync() bool {
	if x != nil {
		return x.Sync
	}
	return false
}

// SendTask is a task of sending email.
type SendTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email   *Email       `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Options *SendOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *SendTask) Reset() {
	*x = SendTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postar_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTask) ProtoMessage() {}

func (x *SendTask) ProtoReflect() protoreflect.Message {
	mi := &file_postar_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTask.ProtoReflect.Descriptor instead.
func (*SendTask) Descriptor() ([]byte, []int) {
	return file_postar_service_proto_rawDescGZIP(), []int{2}
}

func (x *SendTask) GetEmail() *Email {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *SendTask) GetOptions() *SendOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// Result represents the result of one call.
type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// data is a byte array contains the message,
	// so you only need to turn it to a string with UTF8 encoding.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postar_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_postar_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_postar_service_proto_rawDescGZIP(), []int{3}
}

func (x *Result) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_postar_service_proto protoreflect.FileDescriptor

var file_postar_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x22, 0x67, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x21, 0x0a, 0x0b, 0x53, 0x65, 0x6e,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x22, 0x62, 0x0a, 0x08,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x2f, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x1c, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x3d,
	0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x2c, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x10, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x0c, 0x5a,
	0x0a, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_postar_service_proto_rawDescOnce sync.Once
	file_postar_service_proto_rawDescData = file_postar_service_proto_rawDesc
)

func file_postar_service_proto_rawDescGZIP() []byte {
	file_postar_service_proto_rawDescOnce.Do(func() {
		file_postar_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_postar_service_proto_rawDescData)
	})
	return file_postar_service_proto_rawDescData
}

var file_postar_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_postar_service_proto_goTypes = []interface{}{
	(*Email)(nil),       // 0: services.Email
	(*SendOptions)(nil), // 1: services.SendOptions
	(*SendTask)(nil),    // 2: services.SendTask
	(*Result)(nil),      // 3: services.Result
}
var file_postar_service_proto_depIdxs = []int32{
	0, // 0: services.SendTask.email:type_name -> services.Email
	1, // 1: services.SendTask.options:type_name -> services.SendOptions
	2, // 2: services.PostarService.Send:input_type -> services.SendTask
	3, // 3: services.PostarService.Send:output_type -> services.Result
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_postar_service_proto_init() }
func file_postar_service_proto_init() {
	if File_postar_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_postar_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Email); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postar_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postar_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postar_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_postar_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_postar_service_proto_goTypes,
		DependencyIndexes: file_postar_service_proto_depIdxs,
		MessageInfos:      file_postar_service_proto_msgTypes,
	}.Build()
	File_postar_service_proto = out.File
	file_postar_service_proto_rawDesc = nil
	file_postar_service_proto_goTypes = nil
	file_postar_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PostarServiceClient is the client API for PostarService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PostarServiceClient interface {
	// Send does the send task and returns a result.
	Send(ctx context.Context, in *SendTask, opts ...grpc.CallOption) (*Result, error)
}

type postarServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPostarServiceClient(cc grpc.ClientConnInterface) PostarServiceClient {
	return &postarServiceClient{cc}
}

func (c *postarServiceClient) Send(ctx context.Context, in *SendTask, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/services.PostarService/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PostarServiceServer is the server API for PostarService service.
type PostarServiceServer interface {
	// Send does the send task and returns a result.
	Send(context.Context, *SendTask) (*Result, error)
}

// UnimplementedPostarServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPostarServiceServer struct {
}

func (*UnimplementedPostarServiceServer) Send(context.Context, *SendTask) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterPostarServiceServer(s *grpc.Server, srv PostarServiceServer) {
	s.RegisterService(&_PostarService_serviceDesc, srv)
}

func _PostarService_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostarServiceServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.PostarService/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostarServiceServer).Send(ctx, req.(*SendTask))
	}
	return interceptor(ctx, in, info, handler)
}

var _PostarService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.PostarService",
	HandlerType: (*PostarServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _PostarService_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "postar_service.proto",
}
